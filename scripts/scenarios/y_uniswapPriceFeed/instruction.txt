There are two hardhat projects involed in this scenario.
Current hardhat project, that has stablecoin in it.
And another hardhat project, that has DEX in it.


In order to check l_uniswapPriceFeed scenario please follow the order below.

0)Restart ganache and deploy two tokens that will be put into liquidity pool

        npx hardhat run --network ganache scripts/l_uniswapPriceFeed/0_deployTwoTokens.js

1)Move two token addresses to deployment script of DEX.

2)Please move to hardhat project that contains DEX smart contracts. Then deploy DEX and make a liquidity pair for two tokens deployed above. 

        npx hardhat run --network ganache scripts/0_deployment.js 

2)Once DEX is deployed, move UniswapFactory's address to .env file in current hardhat project. Use key UNISWAP_FACTORY.

        UNISWAP_FACTORY= "0xb9AdA6B44E4CFF8FE00443Fadf8ad006CfCc2d10"

3)Deploy stablecoin smart contracts

         npx hardhat run --network ganache scripts/l_uniswapPriceFeed/1_stableCoinDeployment.js 
        
4)Check if DexPriceOracle returns token A's price in Token B, and Token B's price in Token A

        npx hardhat run --network ganache scripts/l_uniswapPriceFeed/2_dexPriceOracle_getPrices.js